name: Release Pipeline

on:
  release:
    types:
      - published

jobs:
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Generate build number
        run: echo "SENTRY_RELEASE=${{ github.sha }}" >> $GITHUB_ENV

      - name: Write info.json
        run: |
          sudo apt-get install -y jq
          COMMIT_SHA=$(git rev-parse --short HEAD)
          jq --arg sha "$SENTRY_RELEASE" '.sha = $sha' static/info.json > temp.json && mv temp.json static/info.json
          jq --arg date "$(date -Iseconds)" '.build_date = $date' static/info.json > temp.json && mv temp.json static/info.json
          jq --arg version "${{ github.event.release.tag_name }}" '.version = $version' static/info.json > temp.json && mv temp.json static/info.json

      - name: Build Svelte app
        run: npm run build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-artifacts
          path: |
            build/
            .netlify/

  # upload-artifacts:
  #   name: Upload Artifacts to Release
  #   needs: build-android
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v3

  #     - name: Upload APK to Release
  #       uses: actions/upload-release-asset@v1
  #       with:
  #         upload_url: ${{ github.event.release.upload_url }}
  #         asset_path: signed-apk/vertretungsapp-release.apk
  #         asset_name: vertretungsapp-release.apk
  #         asset_content_type: application/vnd.android.package-archive
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-netlify:
    name: Deploy to Netlify
    needs: build-web
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-artifacts
          path: |
            build/
            .netlify/

      - name: DEBUG List files
        run: ls -la .

      - name: DEBUG List files
        run: ls -la build

      - name: DEBUG List files
        run: ls -la netlify

      - name: DEBUG List files
        run: ls -la .netlify

      - name: Deploy as Staging
        uses: nwtgck/actions-netlify@v3
        if: github.event.release.prerelease == true
        with:
          publish-dir: 'build/'
          functions-dir: '.netlify/functions-internal/'
          production-deploy: false
          deploy-message: 'Deployed ${{ github.event.release.tag_name }} from GitHub Release (commit ${{ github.sha }})'
          alias: ${{ github.sha }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deploy to Staging
        uses: nwtgck/actions-netlify@v3
        if: github.event.release.prerelease == true
        with:
          publish-dir: 'build/'
          functions-dir: '.netlify/functions-internal/'
          production-deploy: false
          deploy-message: 'Deployed ${{ github.event.release.tag_name }} from GitHub Release to Staging channel (commit ${{ github.sha }})'
          alias: 'staging'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deploy as Production
        uses: nwtgck/actions-netlify@v3
        if: github.event.release.prerelease == false
        with:
          publish-dir: 'build/'
          functions-dir: '.netlify/functions-internal/'
          production-deploy: true
          deploy-message: '(Production) Deployed ${{ github.event.release.tag_name }} from GitHub Release (commit ${{ github.sha }})'
          alias: ${{ github.sha }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
